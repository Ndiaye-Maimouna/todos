#name: Pull Request
#on:
#  push:
#    branches:
#      - 'DIC1-*'
#      - 'IS-*'
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    env:
#      MY_ENV_VAR: value
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Set up Java
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Scan de secrets
#        run: |
#          echo "Todo : Scan de secrets"
#        shell: bash
#
#      - name: Scan des vulnérabilités
#        run: |
#          echo "Todo : Scan des vulnérabilités"
#        shell: bash
#
#      - name: Unit Tests
#        run: |
#          mvn test -Put -Pit
#        shell: bash
#
#      - name: Quality Gate
#        run: |
#          echo "Todo : Quality Gate"
#        shell: bash
#
#      - name: Check Quality Gate
#        run: |
#          echo "Todo : Check Quality Gate"
#        shell: bash

#name: Pull Request
#
#on:
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    env:
#      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#
#    steps:
#      - name: Checkout du code
#        uses: actions/checkout@v3
#
#      - name: Set up Java
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Scan de secrets (Gitleaks)
#        uses: gitleaks/actions/gitleaks@v2
#        with:
#          args: detect --source=. --verbose
#
#      - name: Scan des vulnérabilités (OWASP Dependency-Check)
#        uses: dependency-check/Dependency-Check_Action@main
#        with:
#          project: "pull-request-scan"
#          format: "HTML"
#          failOnCVSS: 7.0
#
#      - name: Compilation et tests
#        run: mvn clean verify
#
#      - name: Analyse Quality Gate avec SonarQube
#        run: |
#          mvn sonar:sonar
#            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#            -Dsonar.host.url=http://localhost:9000

name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and analyze on SonarCloud
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        run: mvn clean verify sonar:sonar \
          -Dsonar.projectKey=TON_ORGANISATION_TONPROJET \
          -Dsonar.organization=TON_ORGANISATION \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

