name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Scan de secrets (Gitleaks)
        uses: zricethezav/gitleaks-action@v1
        with:
          args: --path=. --verbose

      - name: Verify Java Path
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          $JAVA_HOME/bin/java -version

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "pull-request-scan"
          format: "HTML"
          out: "./reports"
          path: "."
          args: "--scan ./ --disableYarnAudit --disableNodeAudit"

      - name: Compilation et tests
        run: mvn clean verify -Put -Pit

      - name: Analyse Quality Gate avec SonarCloud
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=todos \
            -Dsonar.organization=todos \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: VÃ©rifier le Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
