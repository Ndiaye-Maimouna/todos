name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      # Checkout du code (branche de la PR)
      - name: Checkout du code
        uses: actions/checkout@v3

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Scan de secrets (Gitleaks)
      - name: Scan de secrets (Gitleaks)
        uses: zricethezav/gitleaks-action@v1
        with:
          args: --path=. --verbose

      # Scan des vulnérabilités (OWASP Dependency-Check)
#      - name: Scan des vulnérabilités (OWASP Dependency-Check)
#        uses: dependency-check/Dependency-Check_Action@main
#        with:
#          project: "pull-request-scan"
#          format: "HTML"
#          out: "reports"
#          path: "."

      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.10/dependency-check-9.0.10-release.zip
          unzip dependency-check-9.0.10-release.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run Dependency-Check
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "pull-request-scan" \
            --scan . \
            --format HTML \
            --out reports \
            --disableAssembly \
            --failOnCVSS 7

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports


        # Compilation et tests
      - name: Compilation et tests
        run: mvn clean verify -Put -Pit

      # Analyse Quality Gate avec SonarCloud
      - name: Analyse Quality Gate avec SonarCloud
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=todos \
            -Dsonar.organization=todos \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml


      # Vérification du Quality Gate
      - name: Vérifier le Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
